# https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
name: python_tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  python_tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
    runs-on: ubuntu-latest
    services:
      # Label does not set the Postgres host name which will be localhost
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: runner
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Map TCP port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ~/infogami_python_venv
          key: ${{ runner.os }}-venv-${{ hashFiles('*requirements.txt') }}
      - run: python3 -m venv ~/infogami_python_venv
      - name: Install dependencies
      - run: |
          source ~/infogami_python_venv/bin/activate
          pip install black codespell flake8 isort mypy pytest pyupgrade
          pip install psycopg2 -r requirements.txt
      - name: Run tests
      - run: |
          source ~/infogami_python_venv/bin/activate
          black --check . || true
          codespell . --ignore-words-list=ba,referer --quiet-level=2
          flake8 . --count --select=C,E5,E9,F4,F6,F7,F82 --max-complexity=43 --max-line-length=233 --show-source --statistics
          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          isort --check-only --profile black . || true
          mypy .
          shopt -s globstar && pyupgrade --py38-plus **/*.py || true
          # web.py needs to find the database on a host named postgres
          echo "127.0.0.1 postgres" | sudo tee -a /etc/hosts
          psql --host=postgres --command='create database infobase_test;'  # MUST have a --host=
          pytest infogami -s
          pytest tests
          pytest test
          scripts/run_doctests.sh
